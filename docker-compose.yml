version: '3.9'

services:
  n8n:
    container_name: n8n_whatsapp
    image: n8nio/n8n:1.103.2
    restart: always
    ports:
      - "5678:5678"
    env_file:
      - ./n8n.env
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    networks:
      - whatsapp-net

  evolution_api:
    container_name: evolution_api
    image: atendai/evolution-api:v2.1.1
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - ./evolution_api.env
    volumes:
      - evolution_store:/evolution/store
      - evolution_instances:/evolution/instances
    depends_on:
      - postgres
      - redis
    networks:
      - whatsapp-net
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048M
        reservations:
          cpus: '0.5'
          memory: 1024M
    sysctls:
      net.core.somaxconn: 65535
      net.ipv4.tcp_max_syn_backlog: 65535

  postgres:
    container_name: whatsapp_postgres
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: evolutionapi_db
      POSTGRES_USER: evolutionuser
      POSTGRES_PASSWORD: P0stgr3s_S3cur3_P@ssw0rd!
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - whatsapp-net

  redis:
    container_name: whatsapp_redis
    image: redis:7-alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - whatsapp-net

volumes:
  n8n_data:
  evolution_store:
  evolution_instances:
  postgres_data:
  redis_data:

networks:
  whatsapp-net:
    driver: bridge